for (p in retrieved_codelist_paths) {
retrieved_codelist = retrieved_codelist = read.csv(paste('../codelists/output/',p,sep='')) %>%
select('opcs') %>%
distinct()%>%
filter(!grepl("^(Y|Z)", opcs))
b <- benchmark_codelist
b$retrieved <- benchmark_codelist$opcs %in% retrieved_codelist$opcs
b %>% group_by(Mapping1) %>% count()
c <- b %>% group_by(Mapping1) %>% summarise(avg=mean(retrieved))
c$query <- n
n=n+1
plot_data <- rbind(plot_data, c)
}
plot_data <- plot_data %>% drop_na() %>% mutate(query=as.factor(query))
colour_palette <- c('#0868ac', '#43a2ca','#7bccc4','#bae4bc')
ggplot(plot_data, aes(fill=query, x=Mapping1, y=avg)) +
geom_bar(position='dodge', stat='identity') +
theme_classic() +
scale_fill_manual(values = colour_palette, labels=c('Query 1','Query 2','Query 3','Query 4')) +
theme(
panel.grid.major.y = element_line(colour = "gray"),
legend.title=element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
) +
ylim(0,1) +
scale_y_continuous(breaks=seq(0,1,0.2), expand = expansion(mult = c(0, 0)))+
expand_limits(y = 1) +
xlab('Category') + ylab('Recall')
library(ggplot2)
library(tidyverse)
library(magrittr)
library(reshape2)
benchmark_codelist = read.csv('../codelists/CORECT_dictionary.csv') %>%
filter(Mapping1!='')  %>%
select(opcs,Mapping1) %>%
filter(!grepl("^(Y|Z)", opcs))
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Attention to stoma', ] = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Stoma opened', ] = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Closure of stoma ', ] = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic Imaging', ] = 'Diagnostic imaging\n& testing'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic Testing', ] = 'Diagnostic imaging\n& testing'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagostic Testing', ] = 'Diagnostic imaging & testing'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic endoscope of lower GI ', ] = 'Diagnostic endoscope\n of lower GI'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic endoscope of upper GI', ] = 'Diagnostic endoscope\n of upper GI'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Other operation on colon', ] = 'Other operation\non colon'
retrieved_codelist_paths = c('omop/ukquery_colorectal_0_snomed_opcs.csv',
'omop/ukquery_colorectal_1_snomed_opcs.csv',
'omop/ukquery_colorectal_2_snomed_opcs.csv',
'omop/ukquery_colorectal_3_snomed_opcs.csv')
plot_data = NA
n = 1
for (p in retrieved_codelist_paths) {
retrieved_codelist = retrieved_codelist = read.csv(paste('../codelists/output/',p,sep='')) %>%
select('opcs') %>%
distinct()%>%
filter(!grepl("^(Y|Z)", opcs))
b <- benchmark_codelist
b$retrieved <- benchmark_codelist$opcs %in% retrieved_codelist$opcs
b %>% group_by(Mapping1) %>% count()
c <- b %>% group_by(Mapping1) %>% summarise(avg=mean(retrieved))
c$query <- n
n=n+1
plot_data <- rbind(plot_data, c)
}
plot_data <- plot_data %>% drop_na() %>% mutate(query=as.factor(query))
colour_palette <- c('#0868ac', '#43a2ca','#7bccc4','#bae4bc')
ggplot(plot_data, aes(fill=query, x=Mapping1, y=avg)) +
geom_bar(position='dodge', stat='identity') +
theme_classic() +
scale_fill_manual(values = colour_palette, labels=c('Query 1','Query 2','Query 3','Query 4')) +
theme(
panel.grid.major.y = element_line(colour = "gray"),
legend.title=element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
) +
ylim(0,1) +
scale_y_continuous(breaks=seq(0,1,0.2), expand = expansion(mult = c(0, 0)))+
expand_limits(y = 1) +
xlab('Category') + ylab('Recall')
library(ggplot2)
library(tidyverse)
library(magrittr)
library(reshape2)
benchmark_codelist = read.csv('../codelists/CORECT_dictionary.csv') %>%
filter(Mapping1!='')  %>%
select(opcs,Mapping1) %>%
filter(!grepl("^(Y|Z)", opcs))
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Attention to stoma', ] = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Stoma opened', ] = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Closure of stoma ', ] = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic Imaging', ] = 'Diagnostic imaging & testing'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic Testing', ] = 'Diagnostic imaging & testing'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagostic Testing', ] = 'Diagnostic imaging & testing'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic endoscope of lower GI ', ] = 'Diagnostic endoscope\n of lower GI'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic endoscope of upper GI', ] = 'Diagnostic endoscope\n of upper GI'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Other operation on colon', ] = 'Other operation\non colon'
retrieved_codelist_paths = c('omop/ukquery_colorectal_0_snomed_opcs.csv',
'omop/ukquery_colorectal_1_snomed_opcs.csv',
'omop/ukquery_colorectal_2_snomed_opcs.csv',
'omop/ukquery_colorectal_3_snomed_opcs.csv')
plot_data = NA
n = 1
for (p in retrieved_codelist_paths) {
retrieved_codelist = retrieved_codelist = read.csv(paste('../codelists/output/',p,sep='')) %>%
select('opcs') %>%
distinct()%>%
filter(!grepl("^(Y|Z)", opcs))
b <- benchmark_codelist
b$retrieved <- benchmark_codelist$opcs %in% retrieved_codelist$opcs
b %>% group_by(Mapping1) %>% count()
c <- b %>% group_by(Mapping1) %>% summarise(avg=mean(retrieved))
c$query <- n
n=n+1
plot_data <- rbind(plot_data, c)
}
plot_data <- plot_data %>% drop_na() %>% mutate(query=as.factor(query))
colour_palette <- c('#0868ac', '#43a2ca','#7bccc4','#bae4bc')
ggplot(plot_data, aes(fill=query, x=Mapping1, y=avg)) +
geom_bar(position='dodge', stat='identity') +
theme_classic() +
scale_fill_manual(values = colour_palette, labels=c('Query 1','Query 2','Query 3','Query 4')) +
theme(
panel.grid.major.y = element_line(colour = "gray"),
legend.title=element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
) +
ylim(0,1) +
scale_y_continuous(breaks=seq(0,1,0.2), expand = expansion(mult = c(0, 0)))+
expand_limits(y = 1) +
xlab('Category') + ylab('Recall')
library(ggplot2)
library(tidyverse)
library(magrittr)
library(reshape2)
benchmark_codelist = read.csv('../codelists/CORECT_dictionary.csv') %>%
filter(Mapping1!='')  %>%
select(opcs,Mapping1) %>%
filter(!grepl("^(Y|Z)", opcs))
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Attention to stoma', ] = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Stoma opened', ] = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Closure of stoma ', ] = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic Imaging', ] = 'Diagnostic imaging & testing'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic Testing', ] = 'Diagnostic imaging & testing'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagostic Testing', ] = 'Diagnostic imaging & testing'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic endoscope of lower GI ', ] = 'Diagnostic endoscope of lower GI'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic endoscope of upper GI', ] = 'Diagnostic endoscope of upper GI'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Other operation on colon', ] = 'Other operation on colon'
retrieved_codelist_paths = c('omop/ukquery_colorectal_0_snomed_opcs.csv',
'omop/ukquery_colorectal_1_snomed_opcs.csv',
'omop/ukquery_colorectal_2_snomed_opcs.csv',
'omop/ukquery_colorectal_3_snomed_opcs.csv')
plot_data = NA
n = 1
for (p in retrieved_codelist_paths) {
retrieved_codelist = retrieved_codelist = read.csv(paste('../codelists/output/',p,sep='')) %>%
select('opcs') %>%
distinct()%>%
filter(!grepl("^(Y|Z)", opcs))
b <- benchmark_codelist
b$retrieved <- benchmark_codelist$opcs %in% retrieved_codelist$opcs
b %>% group_by(Mapping1) %>% count()
c <- b %>% group_by(Mapping1) %>% summarise(avg=mean(retrieved))
c$query <- n
n=n+1
plot_data <- rbind(plot_data, c)
}
plot_data <- plot_data %>% drop_na() %>% mutate(query=as.factor(query))
colour_palette <- c('#0868ac', '#43a2ca','#7bccc4','#bae4bc')
ggplot(plot_data, aes(fill=query, x=Mapping1, y=avg)) +
geom_bar(position='dodge', stat='identity') +
theme_classic() +
scale_fill_manual(values = colour_palette, labels=c('Query 1','Query 2','Query 3','Query 4')) +
theme(
panel.grid.major.y = element_line(colour = "gray"),
legend.title=element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
) +
ylim(0,1) +
scale_y_continuous(breaks=seq(0,1,0.2), expand = expansion(mult = c(0, 0)))+
expand_limits(y = 1) +
xlab('Category') + ylab('Recall')
View(benchmark_codelist)
library(ggplot2)
library(tidyverse)
library(magrittr)
library(reshape2)
benchmark_codelist = read.csv('../codelists/CORECT_dictionary.csv') %>%
filter(Mapping1!='')  %>%
select(opcs,Mapping1) %>%
filter(!grepl("^(Y|Z)", opcs))
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Attention to stoma', ]$Mapping1 = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Stoma opened', ]$Mapping1 = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Closure of stoma ', ]$Mapping1 = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic Imaging', ]$Mapping1 = 'Diagnostic imaging & testing'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic Testing', ]$Mapping1 = 'Diagnostic imaging & testing'
View(benchmark_codelist)
library(ggplot2)
library(tidyverse)
library(magrittr)
library(reshape2)
benchmark_codelist = read.csv('../codelists/CORECT_dictionary.csv') %>%
filter(Mapping1!='')  %>%
select(opcs,Mapping1) %>%
filter(!grepl("^(Y|Z)", opcs))
plot_data = NA
n = 1
for (p in retrieved_codelist_paths) {
retrieved_codelist = retrieved_codelist = read.csv(paste('../codelists/output/',p,sep='')) %>%
select('opcs') %>%
distinct()%>%
filter(!grepl("^(Y|Z)", opcs))
b <- benchmark_codelist
b$retrieved <- benchmark_codelist$opcs %in% retrieved_codelist$opcs
b %>% group_by(Mapping1) %>% count()
c <- b %>% group_by(Mapping1) %>% summarise(avg=mean(retrieved))
c$query <- n
n=n+1
plot_data <- rbind(plot_data, c)
}
plot_data <- plot_data %>% drop_na() %>% mutate(query=as.factor(query))
colour_palette <- c('#0868ac', '#43a2ca','#7bccc4','#bae4bc')
ggplot(plot_data, aes(fill=query, x=Mapping1, y=avg)) +
geom_bar(position='dodge', stat='identity') +
theme_classic() +
scale_fill_manual(values = colour_palette, labels=c('Query 1','Query 2','Query 3','Query 4')) +
theme(
panel.grid.major.y = element_line(colour = "gray"),
legend.title=element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
) +
ylim(0,1) +
scale_y_continuous(breaks=seq(0,1,0.2), expand = expansion(mult = c(0, 0)))+
expand_limits(y = 1) +
xlab('Category') + ylab('Recall')
library(ggplot2)
library(tidyverse)
library(magrittr)
library(reshape2)
benchmark_codelist = read.csv('../codelists/CORECT_dictionary.csv') %>%
filter(Mapping1!='')  %>%
select(opcs,Mapping1) %>%
filter(!grepl("^(Y|Z)", opcs))
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Attention to stoma', ]$Mapping1 = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Stoma opened', ]$Mapping1 = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Closure of stoma ', ]$Mapping1 = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic Imaging', ]$Mapping1 = 'Diagnostic imaging & testing'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagostic Testing', ]$Mapping1 = 'Diagnostic imaging & testing'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic endoscope of lower GI ', ]$Mapping1 = 'Diagnostic endoscope of lower GI'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic endoscope of upper GI', ]$Mapping1 = 'Diagnostic endoscope of upper GI'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Other operation on colon', ]$Mapping1 = 'Other operation on colon'
retrieved_codelist_paths = c('omop/ukquery_colorectal_0_snomed_opcs.csv',
'omop/ukquery_colorectal_1_snomed_opcs.csv',
'omop/ukquery_colorectal_2_snomed_opcs.csv',
'omop/ukquery_colorectal_3_snomed_opcs.csv')
plot_data = NA
n = 1
for (p in retrieved_codelist_paths) {
retrieved_codelist = retrieved_codelist = read.csv(paste('../codelists/output/',p,sep='')) %>%
select('opcs') %>%
distinct()%>%
filter(!grepl("^(Y|Z)", opcs))
b <- benchmark_codelist
b$retrieved <- benchmark_codelist$opcs %in% retrieved_codelist$opcs
b %>% group_by(Mapping1) %>% count()
c <- b %>% group_by(Mapping1) %>% summarise(avg=mean(retrieved))
c$query <- n
n=n+1
plot_data <- rbind(plot_data, c)
}
plot_data <- plot_data %>% drop_na() %>% mutate(query=as.factor(query))
colour_palette <- c('#0868ac', '#43a2ca','#7bccc4','#bae4bc')
ggplot(plot_data, aes(fill=query, x=Mapping1, y=avg)) +
geom_bar(position='dodge', stat='identity') +
theme_classic() +
scale_fill_manual(values = colour_palette, labels=c('Query 1','Query 2','Query 3','Query 4')) +
theme(
panel.grid.major.y = element_line(colour = "gray"),
legend.title=element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
) +
ylim(0,1) +
scale_y_continuous(breaks=seq(0,1,0.2), expand = expansion(mult = c(0, 0)))+
expand_limits(y = 1) +
xlab('Category') + ylab('Recall')
library(ggplot2)
library(tidyverse)
library(magrittr)
library(reshape2)
benchmark_codelist = read.csv('../codelists/CORECT_dictionary.csv') %>%
filter(Mapping1!='')  %>%
select(opcs,Mapping1) %>%
filter(!grepl("^(Y|Z)", opcs))
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Attention to stoma', ]$Mapping1 = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Stoma opened', ]$Mapping1 = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Closure of stoma ', ]$Mapping1 = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic Imaging', ]$Mapping1 = 'Diagnostic imaging\n& testing'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagostic Testing', ]$Mapping1 = 'Diagnostic imaging\n& testing'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic endoscope of lower GI ', ]$Mapping1 = 'Diagnostic endoscope\nof lower GI'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic endoscope of upper GI', ]$Mapping1 = 'Diagnostic endoscope\nof upper GI'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Other operation on colon', ]$Mapping1 = 'Other operation\non colon'
retrieved_codelist_paths = c('omop/ukquery_colorectal_0_snomed_opcs.csv',
'omop/ukquery_colorectal_1_snomed_opcs.csv',
'omop/ukquery_colorectal_2_snomed_opcs.csv',
'omop/ukquery_colorectal_3_snomed_opcs.csv')
plot_data = NA
n = 1
for (p in retrieved_codelist_paths) {
retrieved_codelist = retrieved_codelist = read.csv(paste('../codelists/output/',p,sep='')) %>%
select('opcs') %>%
distinct()%>%
filter(!grepl("^(Y|Z)", opcs))
b <- benchmark_codelist
b$retrieved <- benchmark_codelist$opcs %in% retrieved_codelist$opcs
b %>% group_by(Mapping1) %>% count()
c <- b %>% group_by(Mapping1) %>% summarise(avg=mean(retrieved))
c$query <- n
n=n+1
plot_data <- rbind(plot_data, c)
}
plot_data <- plot_data %>% drop_na() %>% mutate(query=as.factor(query))
colour_palette <- c('#0868ac', '#43a2ca','#7bccc4','#bae4bc')
ggplot(plot_data, aes(fill=query, x=Mapping1, y=avg)) +
geom_bar(position='dodge', stat='identity') +
theme_classic() +
scale_fill_manual(values = colour_palette, labels=c('Query 1','Query 2','Query 3','Query 4')) +
theme(
panel.grid.major.y = element_line(colour = "gray"),
legend.title=element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
) +
ylim(0,1) +
scale_y_continuous(breaks=seq(0,1,0.2), expand = expansion(mult = c(0, 0)))+
expand_limits(y = 1) +
xlab('Category') + ylab('Recall')
library(tidyverse)
library(magrittr)
library(ggplot2)
library(RColorBrewer)
library(reshape2)
library(patchwork)
matrix_length = read.csv('../visualisation/stats/length_matrix_uk.csv') %>% melt() %>% mutate(variable = gsub('\\.',  ' ', matrix_length$variable) )
library(tidyverse)
library(magrittr)
library(ggplot2)
library(RColorBrewer)
library(reshape2)
library(patchwork)
matrix_length = read.csv('../visualisation/stats/length_matrix_uk.csv') %>% melt() %>% mutate(variable = gsub('\\.',  ' ', matrix_length$variable) )
setwd("~/Documents/ontologyFilter/src/codelists")
library(tidyverse)
library(magrittr)
library(ggplot2)
library(RColorBrewer)
library(reshape2)
library(patchwork)
matrix_length = read.csv('../visualisation/stats/length_matrix_uk.csv') %>% melt() %>% mutate(variable = gsub('\\.',  ' ', matrix_length$variable) )
matrix_length = read.csv('../visualisation/stats/length_matrix_uk.csv')
View(matrix_length)
matrix_length = read.csv('../visualisation/stats/length_matrix_uk.csv') %>% melt()
View(matrix_length)
library(tidyverse)
library(magrittr)
library(ggplot2)
library(RColorBrewer)
library(reshape2)
library(patchwork)
matrix_length = read.csv('../visualisation/stats/length_matrix_uk.csv') %>% melt() %>% mutate(variable = gsub('\\.',  ' ', matrix_length$variable) )
matrix_length = read.csv('../visualisation/stats/length_matrix_uk.csv')
matrix_length = read.csv('../visualisation/stats/length_matrix_uk.csv') %>% melt() %>% mutate(variable = gsub('\\.',  ' ', matrix_length$variable) )
matrix_length = read.csv('../visualisation/stats/length_matrix_uk.csv') %>% melt() %>% mutate(variable = gsub('\\.',  ' ', variable) )
View(matrix_length)
matrix_precision = read.csv('../visualisation/stats/precision_matrix_uk.csv') %>% melt() %>% mutate(variable = gsub('\\.',  ' ', matrix_length$variable) )
View(matrix_precision)
matrix_length = read.csv('../visualisation/stats/length_matrix_uk.csv') %>% melt() %>% mutate(variable = gsub('\\.',  ' ', variable) )
matrix_precision = read.csv('../visualisation/stats/precision_matrix_uk.csv') %>% melt() %>% mutate(variable = gsub('\\.',  ' ', variable) )
matrix_recall = read.csv('../visualisation/stats/recall_matrix_uk.csv') %>% melt() %>% mutate(variable = gsub('\\.',  ' ', variable) )
library(tidyverse)
library(magrittr)
library(ggplot2)
library(RColorBrewer)
library(reshape2)
library(patchwork)
matrix_length = read.csv('../visualisation/stats/length_matrix_uk.csv') %>% melt() %>% mutate(variable = gsub('\\.',  ' ', variable) )
matrix_precision = read.csv('../visualisation/stats/precision_matrix_uk.csv') %>% melt() %>% mutate(variable = gsub('\\.',  ' ', variable) )
matrix_recall = read.csv('../visualisation/stats/recall_matrix_uk.csv') %>% melt() %>% mutate(variable = gsub('\\.',  ' ', variable) )
factor_levels <- c('lung','colorectal','glaucoma','cataract','appendix')
matrix_length$X <- factor(matrix_length$X, levels = factor_levels)
matrix_precision$X <- factor(matrix_precision$X, levels = factor_levels)
matrix_recall$X <- factor(matrix_recall$X, levels = factor_levels)
plot_theme <- theme(
axis.line = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position='bottom',
legend.title=element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.margin=unit(c(0,0,0,0),"cm"),
plot.title = element_text(hjust = 0.5)
)
plot1 <- ggplot(matrix_length, aes(variable, X, fill=value)) +
geom_tile(color = "white",
lwd = 2,
linetype = 1) +
scale_fill_distiller(
palette = ("Blues"),
direction=1,
trans='log',
breaks=c(1,10,100,1000),
limits=c(10,max(matrix_length$value))
) + coord_equal() +
geom_text(
aes(
label = str_pad(scales::comma(value,2), 6)),
color = "black",
size = 4,
hjust=0.5
) +
plot_theme + ylab('Diagnosis') +
ggtitle('Length')
plot2 <- ggplot(matrix_precision, aes(variable, X, fill=value)) +
geom_tile(color = "white",
lwd = 2,
linetype = 1) +
scale_fill_distiller(
palette = ("Greens"),
direction=1,
limits=c(0,1)
) + coord_equal() +
geom_text(
aes(
label = format(round(value,3))
),
color = 'black',
size = 4,
hjust=0.5
) +
plot_theme + theme(axis.text.y=element_blank()) + ylab('') +
ggtitle('Precision')
plot3 <- ggplot(matrix_recall, aes(variable, X, fill=value)) +
geom_tile(color = "white",
lwd = 2,
linetype = 1) +
scale_fill_distiller(
palette = ("Greens"),
direction=1,
limits=c(0,1)
) + coord_equal() +
geom_text(
aes(
label = format(round(value,3))
),
color = "black",
size = 4,
hjust=0.5
) +
plot_theme + theme(axis.text.y=element_blank()) + ylab('')+
ggtitle('Recall')
plot1 + plot2 + plot3
library(ggplot2)
library(tidyverse)
library(magrittr)
library(reshape2)
benchmark_codelist = read.csv('../codelists/CORECT_dictionary.csv') %>%
filter(Mapping1!='')  %>%
select(opcs,Mapping1) %>%
filter(!grepl("^(Y|Z)", opcs))
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Attention to stoma', ]$Mapping1 = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Stoma opened', ]$Mapping1 = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Closure of stoma ', ]$Mapping1 = 'Stoma'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic Imaging', ]$Mapping1 = 'Diagnostic imaging\n& testing'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagostic Testing', ]$Mapping1 = 'Diagnostic imaging\n& testing'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic endoscope of lower GI ', ]$Mapping1 = 'Diagnostic endoscope\nof lower GI'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Diagnostic endoscope of upper GI', ]$Mapping1 = 'Diagnostic endoscope\nof upper GI'
benchmark_codelist[ benchmark_codelist$Mapping1 == 'Other operation on colon', ]$Mapping1 = 'Other operation\non colon'
retrieved_codelist_paths = c('omop/ukquery_colorectal_0_snomed_opcs.csv',
'omop/ukquery_colorectal_1_snomed_opcs.csv',
'omop/ukquery_colorectal_2_snomed_opcs.csv',
'omop/ukquery_colorectal_3_snomed_opcs.csv')
plot_data = NA
n = 1
for (p in retrieved_codelist_paths) {
retrieved_codelist = retrieved_codelist = read.csv(paste('../codelists/output/',p,sep='')) %>%
select('opcs') %>%
distinct()%>%
filter(!grepl("^(Y|Z)", opcs))
b <- benchmark_codelist
b$retrieved <- benchmark_codelist$opcs %in% retrieved_codelist$opcs
b %>% group_by(Mapping1) %>% count()
c <- b %>% group_by(Mapping1) %>% summarise(avg=mean(retrieved))
c$query <- n
n=n+1
plot_data <- rbind(plot_data, c)
}
plot_data <- plot_data %>% drop_na() %>% mutate(query=as.factor(query))
colour_palette <- c('#0868ac', '#43a2ca','#7bccc4','#bae4bc')
ggplot(plot_data, aes(fill=query, x=Mapping1, y=avg)) +
geom_bar(position='dodge', stat='identity') +
theme_classic() +
scale_fill_manual(values = colour_palette, labels=c('Query 1','Query 2','Query 3','Query 4')) +
theme(
panel.grid.major.y = element_line(colour = "gray"),
legend.title=element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
) +
ylim(0,1) +
scale_y_continuous(breaks=seq(0,1,0.2), expand = expansion(mult = c(0, 0)))+
expand_limits(y = 1) +
xlab('Category') + ylab('Recall')
